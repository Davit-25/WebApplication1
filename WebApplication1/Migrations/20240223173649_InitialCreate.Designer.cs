// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(CinemaTableContext))]
    [Migration("20240223173649_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Entities.FilmsList", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("imbd")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("setAge")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("filmListDB");
                });

            modelBuilder.Entity("WebApplication1.Entities.PackageOfCinema", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Sessionsid")
                        .HasColumnType("int");

                    b.Property<int>("idFilms")
                        .HasColumnType("int");

                    b.Property<string>("idSessions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Sessionsid");

                    b.HasIndex("idFilms");

                    b.ToTable("PackageOfCinemaDB");
                });

            modelBuilder.Entity("WebApplication1.Entities.Sessions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("sessionsDB");
                });

            modelBuilder.Entity("WebApplication1.Entities.PackageOfCinema", b =>
                {
                    b.HasOne("WebApplication1.Entities.Sessions", "Sessions")
                        .WithMany("films")
                        .HasForeignKey("Sessionsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Entities.FilmsList", "Films")
                        .WithMany("sessions")
                        .HasForeignKey("idFilms")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Films");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("WebApplication1.Entities.FilmsList", b =>
                {
                    b.Navigation("sessions");
                });

            modelBuilder.Entity("WebApplication1.Entities.Sessions", b =>
                {
                    b.Navigation("films");
                });
#pragma warning restore 612, 618
        }
    }
}
